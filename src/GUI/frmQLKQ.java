/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
//import java.io.BufferedOutputStream;
//import java.io.FileNotFoundException;
//import java.io.FileOutputStream;
//import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
//import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
//import javax.swing.text.html.parser.DTDConstants;
//import org.apache.poi.xssf.usermodel.*;

/**
 *
 * @author HP
 */
public class frmQLKQ extends javax.swing.JFrame {

    DefaultTableModel tbn = new DefaultTableModel();
    Connect a = new Connect();
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    /**
     * Creates new form frmXemKQ
     */
    public frmQLKQ() {
        initComponents();
        setLocationRelativeTo(null);
        this.setTitle("FORM XEM KẾT QUẢ");
        cbbSQL();
    }

    public void cbbSQL() {
        updateComboboxMSSV();
        updateComboboxNienKhoa();
        updateComboboxHK();
    }

    private void updateComboboxMSSV() {
        try {
            conn = a.getConnection();
            String sql = "SELECT MSSV FROM SINHVIEN GROUP BY MSSV";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            //Tạo 1 DefaultComboboxModel
            DefaultComboBoxModel mssvModel = (DefaultComboBoxModel) cbbMSSV.getModel();
            mssvModel.removeAllElements(); //Xóa hết dữ liệu trong combobox
            while (rs.next()) {
                String mssv = rs.getString("MSSV");
                cbbMSSV.addItem(mssv);
            }
            rs.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void updateComboboxNienKhoa() {
        try {
            conn = a.getConnection();
            String sql = "SELECT NIENKHOA FROM BANGDIEM GROUP BY NIENKHOA";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            //Tạo 1 DefaultComboboxModel
            DefaultComboBoxModel cbbNK = (DefaultComboBoxModel) cbbNienKhoa.getModel();
            cbbNK.removeAllElements(); //Xóa hết dữ liệu trong combobox
            while (rs.next()) {
                String nienkhoa = rs.getString("NIENKHOA");
                cbbNienKhoa.addItem(nienkhoa);
            }
            rs.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void updateComboboxHK() {
        try {
            conn = a.getConnection();
            String sql = "SELECT HOCKY FROM BANGDIEM GROUP BY HOCKY";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            //Tạo 1 DefaultComboboxModel
            DefaultComboBoxModel modelHK = (DefaultComboBoxModel) cbbHK.getModel();
            modelHK.removeAllElements(); //Xóa hết dữ liệu trong combobox
            while (rs.next()) {
                String hocky = rs.getString("HOCKY");
                cbbHK.addItem(hocky);
            }
            rs.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbbNienKhoa = new javax.swing.JComboBox<>();
        cbbHK = new javax.swing.JComboBox<>();
        cbbMSSV = new javax.swing.JComboBox<>();
        btnXemKQ = new javax.swing.JButton();
        rdbALL = new javax.swing.JRadioButton();
        btnPrint = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnAVG = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbXemKQ = new javax.swing.JTable();
        lblSumSTC = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblSumHP = new javax.swing.JLabel();
        lblAVG = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblDate = new javax.swing.JLabel();
        lblTG = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblXepLoai = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("XEM KẾT QUẢ ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "TÌM KIẾM KẾT QUẢ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14)))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("MÃ SỐ SINH VIÊN");

        jLabel3.setText("HỌC KỲ");

        jLabel4.setText("NIÊN KHÓA");

        cbbNienKhoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbNienKhoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        cbbHK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbbMSSV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbNienKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbbHK, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbNienKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbHK, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnXemKQ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXemKQ.setText("XEM");
        btnXemKQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemKQActionPerformed(evt);
            }
        });

        rdbALL.setText("XEM TẤT CẢ");

        btnPrint.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPrint.setText("IN BẢNG ĐIỂM");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExit.setText("THOÁT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnAVG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAVG.setText("TỔNG");
        btnAVG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAVGActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("BẢNG ĐIỂM KẾT QUẢ HỌC TẬP CỦA SINH VIÊN");

        tbXemKQ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbXemKQ);

        lblSumSTC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSumSTC.setForeground(new java.awt.Color(0, 51, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("TỔNG SỐ TÍN CHỈ:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("TỔNG SỐ MÔN HỌC:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("ĐIỂM TRUNG BÌNH:");

        lblSumHP.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSumHP.setForeground(new java.awt.Color(0, 51, 255));

        lblAVG.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblAVG.setForeground(new java.awt.Color(0, 51, 255));

        lblDate.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        lblTG.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("XẾP LOẠI:");

        lblXepLoai.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lblXepLoai.setForeground(new java.awt.Color(0, 51, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAVG, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSumHP, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSumSTC, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblXepLoai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTG, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblSumHP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblSumSTC, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(lblAVG, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(46, 46, 46))
                                            .addComponent(lblTG, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblXepLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnXemKQ, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAVG, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(rdbALL)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXemKQ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbALL)
                    .addComponent(btnAVG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXemKQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemKQActionPerformed
        if (!rdbALL.isSelected()) {
            XemKQ();
        } else {
            XemKQAll();
        }
    }//GEN-LAST:event_btnXemKQActionPerformed

    public void XemKQ() {
        try {
            conn = a.getConnection();
            String sql = "SELECT * FROM BANGDIEM WHERE MSSV=? AND HOCKY=? AND NIENKHOA=?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, cbbMSSV.getSelectedItem().toString());
            ps.setString(2, cbbHK.getSelectedItem().toString());
            ps.setString(3, cbbNienKhoa.getSelectedItem().toString());
            rs = ps.executeQuery();
            while (rs.next()) {
                tbn.setRowCount(0);
                loadData();
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void XemKQAll() {
        try {
            conn = a.getConnection();
            String sql = "SELECT * FROM BANGDIEM WHERE MSSV=? AND NIENKHOA=?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, cbbMSSV.getSelectedItem().toString());
            ps.setString(2, cbbNienKhoa.getSelectedItem().toString());
            rs = ps.executeQuery();
            while (rs.next()) {
                tbn.setRowCount(0);
                loadDataAll();
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void loadData() {
        try {
            int number;
            Vector row, column;
            column = new Vector();
            Statement st = conn.createStatement();
            rs = st.executeQuery("SELECT MSSV, HOCKY, NIENKHOA FROM BANGDIEM");
            ps.setString(1, cbbMSSV.getSelectedItem().toString());
            ps.setString(2, cbbHK.getSelectedItem().toString());
            ps.setString(3, cbbNienKhoa.getSelectedItem().toString());
            rs = ps.executeQuery();
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount(); //trả về số cột

            for (int i = 1; i <= number; i++) {
                column.add(metadata.getColumnName(i)); //lấy ra tiêu đề của các cột
            }
            tbn.setColumnIdentifiers(column);
            while (rs.next()) {
                row = new Vector();
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }
                tbn.addRow(row);
                tbXemKQ.setModel(tbn);
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void loadDataAll() {
        try {
            int number;
            Vector row, column;
            column = new Vector();
            Statement st = conn.createStatement();
            rs = st.executeQuery("SELECT MSSV, NIENKHOA FROM BANGDIEM");
            ps.setString(1, cbbMSSV.getSelectedItem().toString());
            ps.setString(2, cbbNienKhoa.getSelectedItem().toString());
            rs = ps.executeQuery();
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount(); //trả về số cột

            for (int i = 1; i <= number; i++) {
                column.add(metadata.getColumnName(i)); //lấy ra tiêu đề của các cột
            }
            tbn.setColumnIdentifiers(column);
            while (rs.next()) {
                row = new Vector();
                for (int i = 1; i <= number; i++) {
                    row.addElement(rs.getString(i));
                }
                tbn.addRow(row);
                tbXemKQ.setModel(tbn);
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");

        job.setPrintable(new Printable() {
            @Override
            public int print(Graphics pg, PageFormat pf, int pageIndex) throws PrinterException {
                if (pageIndex > 0) {
                    return Printable.NO_SUCH_PAGE;
                }

                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX() + 100, pf.getImageableY() + 100);
                g2.scale(0.54, 0.54);

                jPanel2.paint(g2);
                return Printable.PAGE_EXISTS;
            }
        });
        boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
                JOptionPane.showMessageDialog(this, "IN BẢNG ĐIỂM THÀNH CÔNG!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }

        /*      //IN TABLE THÀNH CÔNG
        try {
            boolean print = tbXemKQ.print();
            if(!print) {
                JOptionPane.showMessageDialog(null, "Unable To Print !!...");
            }
        } catch (PrinterException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
         */
 /*      //XUẤT FILE EXCEL THÀNH CÔNG     
        XSSFWorkbook excelJTableExporter = null;
        BufferedOutputStream excelBOU = null;
        FileOutputStream excelFOU = null;
        XSSFSheet excelSheet = null;

        //Choose Location For Saving Excel File
        JFileChooser excelFileChooser = new JFileChooser("C:\\BaiTapJava\\Java");
//        Change Dilog Box Title
        excelFileChooser.setDialogTitle("Save As");
//        Only filter files with these extensions "xls", "xlsx", "xlsm"
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);

//        Check if save button is clicked
        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            try {
                //Import excek pol libraries to netbeans
                excelJTableExporter = new XSSFWorkbook();
                excelSheet = excelJTableExporter.createSheet("JTable Sheet");

                //Loop to get jtable columns and rows
                for (int i = 0; i < tbn.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < tbn.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        //Now Get Image From JLbale
                        //get the last column
                        if(j == tbn.getColumnCount() - 1){
                            JLabel excelJL = (JLable) tbn.getValueAt(i, j);
                            ImageIcon excelIMageIcon = excelJL.
                        }
                        
                        excelCell.setCellValue(tbn.getValueAt(i, j).toString());
                    }
                }
                //Append xlsx file extensions í selected files. To creats unique file names
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfully !!! ......");
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }
                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

        }
         */
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnAVGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAVGActionPerformed
        if (!rdbALL.isSelected()) {
            view1SUM();
        } else {
            view2SUM();
        }
        LocalDateTime dtDate = LocalDateTime.now();
        LocalDateTime dtTg = LocalDateTime.now();
        DateTimeFormatter dfDate = DateTimeFormatter.ofPattern("dd/ MM /yyyy");
        DateTimeFormatter dfTg = DateTimeFormatter.ofPattern("HH:mm:ss");
        String myDate = dtDate.format(dfDate);
        String myTg = dtTg.format(dfTg);
        lblDate.setText("NGÀY:  " + myDate);
        lblTG.setText("THỜI GIAN: " + myTg);
    }//GEN-LAST:event_btnAVGActionPerformed

    public void view1SUM() {
        try {
            String sql = "SELECT STC, MAHP, DIEMTB  FROM BANGDIEM WHERE MSSV=? AND HOCKY=? AND NIENKHOA=?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, cbbMSSV.getSelectedItem().toString());
            ps.setString(2, cbbHK.getSelectedItem().toString());
            ps.setString(3, cbbNienKhoa.getSelectedItem().toString());
            rs = ps.executeQuery();
            int a = 0;
            int b = 0;
            double AVG = 0;
            while (rs.next()) {
                String sumSTC = rs.getString(1);
                String sumAVG = rs.getString(3);
                int sum1 = Integer.parseInt(sumSTC);
                a += sum1;
                b += 1;
                if (sumAVG.isEmpty()) {
                    AVG = 0;
                    break;
                } else {
                    double sum3 = Double.parseDouble(sumAVG);
                    if (sum3 <= 10 && sum3 >= 9.0) {
                        AVG += 4.0 * sum1;
                    }
                    if (sum3 < 9.0 && sum3 >= 8.0) {
                        AVG += 3.5 * sum1;
                    }
                    if (sum3 < 8.0 && sum3 >= 7.0) {
                        AVG += 3.0 * sum1;
                    }
                    if (sum3 < 7.0 && sum3 >= 6.5) {
                        AVG += 2.5 * sum1;
                    }
                    if (sum3 < 6.0 && sum3 >= 5.5) {
                        AVG += 2.0 * sum1;
                    }
                    if (sum3 < 5.5 && sum3 >= 5.0) {
                        AVG += 1.5 * sum1;
                    }
                    if (sum3 < 5.0 && sum3 >= 4.0) {
                        AVG += 1.0 * sum1;
                    } else {
                        AVG += 0.0 * sum1;
                    }
                }
            }
            if (AVG == 0); else {
                AVG = AVG / a;
                AVG = Math.ceil(AVG * 100) / 100;
            }
            String xeploai = "";
            if (AVG >= 3.6 && AVG <= 4.0) {
                xeploai = "XUẤT SẮC";
            }
            if (AVG >= 3.2 && AVG < 3.6) {
                xeploai = "GIỎI";
            }
            if (AVG >= 2.5 && AVG < 3.2) {
                xeploai = "KHÁ";
            }
            if (AVG >= 2.0 && AVG < 2.5) {
                xeploai = "TRUNG BÌNH";
            }
            if (AVG >= 1.0 && AVG < 2.0) {
                xeploai = "YẾU";
            }
            if (AVG < 1.0) {
                xeploai = "KÉM";
            }
            String kq1 = Integer.toString(a);
            String kq2 = Integer.toString(b);
            String kqAVG = Double.toString(AVG);
            lblSumSTC.setText(kq1);
            lblSumHP.setText(kq2);
            lblAVG.setText(kqAVG);
            lblXepLoai.setText(xeploai);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void view2SUM() {
        try {
            String sql = "SELECT STC, MAHP, DIEMTB  FROM BANGDIEM WHERE MSSV=? AND NIENKHOA=?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, cbbMSSV.getSelectedItem().toString());
            ps.setString(2, cbbNienKhoa.getSelectedItem().toString());
            rs = ps.executeQuery();
            int a = 0;
            int b = 0;
            double AVG = 0;
            while (rs.next()) {
                String sumSTC = rs.getString(1);
                String sumAVG = rs.getString(3);
                int sum1 = Integer.parseInt(sumSTC);
                a += sum1;
                b += 1;
                if (sumAVG.isEmpty()) {
                    AVG = 0;
                    break;
                } else {
                    double sum3 = Double.parseDouble(sumAVG);
                    if (sum3 <= 10 && sum3 >= 9.0) {
                        AVG += 4.0 * sum1;
                    }
                    if (sum3 < 9.0 && sum3 >= 8.0) {
                        AVG += 3.5 * sum1;
                    }
                    if (sum3 < 8.0 && sum3 >= 7.0) {
                        AVG += 3.0 * sum1;
                    }
                    if (sum3 < 7.0 && sum3 >= 6.5) {
                        AVG += 2.5 * sum1;
                    }
                    if (sum3 < 6.0 && sum3 >= 5.5) {
                        AVG += 2.0 * sum1;
                    }
                    if (sum3 < 5.5 && sum3 >= 5.0) {
                        AVG += 1.5 * sum1;
                    }
                    if (sum3 < 5.0 && sum3 >= 4.0) {
                        AVG += 1.0 * sum1;
                    } else {
                        AVG += 0.0 * sum1;
                    }
                }
            }
            if (AVG == 0); else {
                AVG = AVG / a;
                AVG = Math.ceil(AVG * 100) / 100;
            }
            if (AVG >= 3.6 && AVG <= 4.0) {
                lblXepLoai.setText("XUẤT SẮC");
            }
            if (AVG >= 3.2 && AVG < 3.6) {
                lblXepLoai.setText("GIỎI");
            }
            if (AVG >= 2.5 && AVG < 3.2) {
                lblXepLoai.setText("KHÁ");
            }
            if (AVG >= 2.0 && AVG < 2.5) {
                lblXepLoai.setText("TRUNG BÌNH");
            }
            if (AVG >= 1.0 && AVG < 2.0) {
                lblXepLoai.setText("YẾU");
            }
            if (AVG < 1.0) {
                lblXepLoai.setText("KÉM");
            }
            String kq1 = Integer.toString(a);
            String kq2 = Integer.toString(b);
            String kqAVG = Double.toString(AVG);
            lblSumSTC.setText(kq1);
            lblSumHP.setText(kq2);
            lblAVG.setText(kqAVG);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        frmMenu menu = new frmMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQLKQ.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQLKQ.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQLKQ.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQLKQ.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmQLKQ().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAVG;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnXemKQ;
    private javax.swing.JComboBox<String> cbbHK;
    private javax.swing.JComboBox<String> cbbMSSV;
    private javax.swing.JComboBox<String> cbbNienKhoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lblAVG;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblSumHP;
    private javax.swing.JLabel lblSumSTC;
    private javax.swing.JLabel lblTG;
    private javax.swing.JLabel lblXepLoai;
    private javax.swing.JRadioButton rdbALL;
    private javax.swing.JTable tbXemKQ;
    // End of variables declaration//GEN-END:variables
}
